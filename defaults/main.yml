---

# Project source code URL: https://github.com/fisharebest/webtrees

webtrees_enabled: true

webtrees_identifier: webtrees

webtrees_uid: ''
webtrees_gid: ''

webtrees_version: v2.2.1

# The hostname at which webtrees is served.
webtrees_hostname: ''

# The path at which webtrees is served.
# This value must either be `/` or not end with a slash (e.g. `/webtrees`).
webtrees_path_prefix: /

webtrees_base_path: "/{{ webtrees_identifier }}"
webtrees_data_path: "{{ webtrees_base_path }}/data"
webtrees_config_path: "{{ webtrees_base_path }}/config"
webtrees_log_path: "{{ webtrees_base_path }}/logs"

webtrees_container_image: "{{ webtrees_container_image_registry_prefix }}nathanvaughn/webtrees:{{ webtrees_container_image_tag }}"
webtrees_container_image_registry_prefix: docker.io/
webtrees_container_image_tag: "latest"
webtrees_container_image_force_pull: "{{ webtrees_container_image.endswith(':latest') }}"

# Specifies how the container publishes its HTTP port
#
# Takes an "<ip>:<port>" value (e.g. "127.0.0.1:80"), just a port number or an empty string to not expose.
webtrees_container_http_host_bind_port: ''

# The base container network. It will be auto-created by this role if it doesn't exist already.
webtrees_container_network: "{{ webtrees_identifier }}"

# The port number in the container
webtrees_container_http_port: 8079

# A list of additional container networks that the container would be connected to.
# The role does not create these networks, so make sure they already exist.
# Use this to expose this container to another reverse proxy, which runs in a different container network.
webtrees_container_additional_networks: "{{ webtrees_container_additional_networks_auto + webtrees_container_additional_networks_custom }}"
webtrees_container_additional_networks_auto: []
webtrees_container_additional_networks_custom: []

# webtrees_container_labels_traefik_enabled controls whether labels to assist a Traefik reverse-proxy will be attached to the container.
# See `../templates/labels.j2` for details.
#
# To inject your own other container labels, see `webtrees_container_labels_additional_labels`.
webtrees_container_labels_traefik_enabled: true
webtrees_container_labels_traefik_docker_network: "{{ webtrees_container_network }}"
webtrees_container_labels_traefik_hostname: "{{ webtrees_hostname }}"
# The path prefix must either be `/` or not end with a slash (e.g. `/webtrees`).
webtrees_container_labels_traefik_path_prefix: "{{ webtrees_path_prefix }}"
webtrees_container_labels_traefik_rule: "Host(`{{ webtrees_container_labels_traefik_hostname }}`){% if webtrees_container_labels_traefik_path_prefix != '/' %} && PathPrefix(`{{ webtrees_container_labels_traefik_path_prefix }}`){% endif %}"
webtrees_container_labels_traefik_priority: 0
webtrees_container_labels_traefik_entrypoints: web-secure
webtrees_container_labels_traefik_tls: "{{ webtrees_container_labels_traefik_entrypoints != 'web' }}"
webtrees_container_labels_traefik_tls_certResolver: default  # noqa var-naming

# Controls which additional headers to attach to all HTTP requests.
# To add your own custom request headers, use `webtrees_container_labels_traefik_additional_response_headers_custom`
webtrees_container_labels_traefik_additional_request_headers: "{{ webtrees_container_labels_traefik_additional_request_headers_auto | combine(webtrees_container_labels_traefik_additional_request_headers_custom) }}"
webtrees_container_labels_traefik_additional_request_headers_auto: {}
webtrees_container_labels_traefik_additional_request_headers_custom: {}

# Controls which additional headers to attach to all HTTP responses.
# To add your own custom response headers, use `webtrees_container_labels_traefik_additional_response_headers_custom`
webtrees_container_labels_traefik_additional_response_headers: "{{ webtrees_container_labels_traefik_additional_response_headers_auto | combine(webtrees_container_labels_traefik_additional_response_headers_custom) }}"
webtrees_container_labels_traefik_additional_response_headers_auto: |
  {{
    {}
    | combine ({'X-XSS-Protection': webtrees_http_header_xss_protection} if webtrees_http_header_xss_protection else {})
    | combine ({'X-Frame-Options': webtrees_http_header_frame_options} if webtrees_http_header_frame_options else {})
    | combine ({'X-Content-Type-Options': webtrees_http_header_content_type_options} if webtrees_http_header_content_type_options else {})
    | combine ({'Content-Security-Policy': webtrees_http_header_content_security_policy} if webtrees_http_header_content_security_policy else {})
    | combine ({'Permission-Policy': webtrees_http_header_content_permission_policy} if webtrees_http_header_content_permission_policy else {})
    | combine ({'Strict-Transport-Security': webtrees_http_header_strict_transport_security} if webtrees_http_header_strict_transport_security and webtrees_container_labels_traefik_tls else {})
  }}
webtrees_container_labels_traefik_additional_response_headers_custom: {}

# webtrees_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `../templates/labels.j2` for details.
#
# Example:
# webtrees_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
webtrees_container_labels_additional_labels: ''

# Intentionally leaving this blank, instead of defaulting it to `headscale_hostname`, to avoid specifying a hostname
# and which could render other services on that hostname potentially unreachable.
# See: https://github.com/mother-of-all-self-hosting/mash-playbook/issues/391
webtrees_container_hostname: ''

# A list of additional "volumes" to mount in the container.
# This list gets populated dynamically at runtime. You can provide a different default value,
# if you wish to mount your own files into the container.
# Contains definition objects like this: `{"type": "bind", "src": "/outside", "dst": "/inside", "options": "readonly"}.
# See the `--mount` documentation for the `docker run` command.
webtrees_container_additional_volumes: []

# A list of extra arguments to pass to the container
webtrees_container_extra_arguments: []

# Additional environment variables.
webtrees_environment_variables_additional_variables: ''

# Specifies the value of the `X-XSS-Protection` header
# Stops pages from loading when they detect reflected cross-site scripting (XSS) attacks.
#
# Learn more about it is here:
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
# - https://portswigger.net/web-security/cross-site-scripting/reflected
webtrees_http_header_xss_protection: "1; mode=block"

# Specifies the value of the `X-Frame-Options` header which controls whether framing can happen.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
webtrees_http_header_frame_options: SAMEORIGIN

# Specifies the value of the `X-Content-Type-Options` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
webtrees_http_header_content_type_options: nosniff

# Specifies the value of the `Content-Security-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
webtrees_http_header_content_security_policy: frame-ancestors 'self'

# Specifies the value of the `Permission-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permission-Policy
webtrees_http_header_content_permission_policy: "{{ 'interest-cohort=()' if webtrees_floc_optout_enabled else '' }}"

# Specifies the value of the `Strict-Transport-Security` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
webtrees_http_header_strict_transport_security: "max-age=31536000; includeSubDomains{{ '; preload' if webtrees_hsts_preload_enabled else '' }}"

# Controls whether to send a "Permissions-Policy interest-cohort=();" header along with all responses
#
# Learn more about what it is here:
# - https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea
# - https://paramdeo.com/blog/opting-your-website-out-of-googles-floc-network
# - https://amifloced.org/
#
# Of course, a better solution is to just stop using browsers (like Chrome), which participate in such tracking practices.
# See: `webtrees_content_permission_policy`
webtrees_floc_optout_enabled: true

# Controls if HSTS preloading is enabled
#
# In its strongest and recommended form, the [HSTS policy](https://www.chromium.org/hsts) includes all subdomains, and
# indicates a willingness to be "preloaded" into browsers:
# `Strict-Transport-Security: max-age=31536000; includeSubDomains; preload`
# For more information visit:
# - https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
# - https://hstspreload.org/#opt-in
# See: `webtrees_http_header_strict_transport_security`
webtrees_hsts_preload_enabled: false

# List of systemd services that webtrees.service depends on
webtrees_systemd_required_services_list: "{{ webtrees_systemd_required_services_list_default + webtrees_systemd_required_services_list_auto + webtrees_systemd_required_services_list_custom }}"
webtrees_systemd_required_services_list_default: "{{ [devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [] }}"
webtrees_systemd_required_services_list_auto: []
webtrees_systemd_required_services_list_custom: []
